                            | # Name: Wang Shao
                            | # ID: 520021911427
                            | 
                            | #Execution begins at address 0
0x000:                      |     .pos 0
0x000: 30f40002000000000000 |     irmovq stack, %rsp      #Set up stack pointer
0x00a: 804800000000000000   |     call main       #Execute main program
0x013: 00                   |     halt            #Terminate program
                            | 
0x018:                      | .align 8
                            | #Source block
0x018:                      | src:
0x018: 0a00000000000000     |     .quad 0x00a
0x020: b000000000000000     |     .quad 0x0b0
0x028: 000c000000000000     |     .quad 0xc00
                            | 
                            | #Destination block
0x030:                      | dest:
0x030: 1101000000000000     |     .quad 0x111
0x038: 2202000000000000     |     .quad 0x222
0x040: 3303000000000000     |     .quad 0x333
                            | 
0x048:                      | main:
0x048: 30f71800000000000000 |     irmovq src, %rdi
0x052: 30f63000000000000000 |     irmovq dest, %rsi
0x05c: 30f20300000000000000 |     irmovq $0x3, %rdx
0x066: 807000000000000000   |     call copy    # copy(src, dest, 3)
0x06f: 90                   |     ret
                            | 
                            | # copy_block(long *src, long *dest, long len)
0x070:                      | copy:
0x070: 30f00000000000000000 |     irmovq $0x0, %rax       #result = 0
0x07a: 6222                 |     andq %rdx, %rdx
0x07c: 70b500000000000000   |     jmp test
0x085:                      | loop:
0x085: 50370000000000000000 |     mrmovq (%rdi), %rbx     #val
0x08f: 30f50800000000000000 |     irmovq $0x8, %rbp       #8
0x099: 6057                 |     addq %rbp, %rdi         #src++
0x09b: 40360000000000000000 |     rmmovq  %rbx, (%rsi)    #copy val to *dest
0x0a5: 6056                 |     addq %rbp, %rsi         #dest++
0x0a7: 6330                 |     xorq %rbx, %rax
0x0a9: 30f50100000000000000 |     irmovq $0x1, %rbp
0x0b3: 6152                 |     subq %rbp, %rdx         #update len
0x0b5:                      | test:
0x0b5: 768500000000000000   |     jg loop
0x0be: 90                   |     ret
                            | 
                            | # The stack starts here and grows to lower address
0x200:                      |     .pos 0x200
0x200:                      | stack:
