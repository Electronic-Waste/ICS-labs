#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
# Name: Wang Shao	ID: 520021911427
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	xorq %rax, %rax		#count = 0
	andq %rdx, %rdx		#len <= 0 ?
	jle Done
	xorq %rbp, %rbp		#i = 0
	rrmovq %rdx, %rbx	#limit
	iaddq $-19, %rbx	#limit = len - k + 1 if limit >= k, can go to BigLoop
	jle	Small

BigLoop:
	mrmovq (%rdi), %r10
	rmmovq %r10, (%rsi)
	andq %r10, %r10		#val <= 0 ?
	jle target1
	iaddq $1, %rax
target1:
	mrmovq 8(%rdi), %r10
	rmmovq %r10, 8(%rsi)
	andq %r10, %r10		#val <= 0 ?
	jle target2
	iaddq $1, %rax
target2:
	mrmovq 16(%rdi), %r10
	rmmovq %r10, 16(%rsi)
	andq %r10, %r10		#val <= 0 ?
	jle target3
	iaddq $1, %rax
target3:
	mrmovq 24(%rdi), %r10
	rmmovq %r10, 24(%rsi)
	andq %r10, %r10		#val <= 0 ?
	jle target4
	iaddq $1, %rax
target4:
	mrmovq 32(%rdi), %r10
	rmmovq %r10, 32(%rsi)
	andq %r10, %r10		#val <= 0 ?
	jle target5
	iaddq $1, %rax
target5:
	mrmovq 40(%rdi), %r10
	rmmovq %r10, 40(%rsi)
	andq %r10, %r10		#val <= 0 ?
	jle target6
	iaddq $1, %rax
target6:
	mrmovq 48(%rdi), %r10
	rmmovq %r10, 48(%rsi)
	andq %r10, %r10		#val <= 0 ?
	jle target7
	iaddq $1, %rax
target7:
	mrmovq 56(%rdi), %r10
	rmmovq %r10, 56(%rsi)
	andq %r10, %r10		#val <= 0 ?
	jle target8
	iaddq $1, %rax
target8:
	mrmovq 64(%rdi), %r10
	rmmovq %r10, 64(%rsi)
	andq %r10, %r10		#val <= 0 ?
	jle target9
	iaddq $1, %rax
target9:
	mrmovq 72(%rdi), %r10
	rmmovq %r10, 72(%rsi)
	andq %r10, %r10		#val <= 0 ?
	jle BigNpos
	iaddq $1, %rax
BigNpos:
	iaddq $80, %rdi		#update src
	iaddq $80, %rsi		#update dst
	iaddq $10, %rbp		#i += k
	iaddq $-10, %rbx	#limit -= k
	jg BigLoop

Small:
	subq %rbp, %rdx		# len -= i
SmallLoop:
	mrmovq (%rdi), %r10
	rmmovq %r10, (%rsi)
	andq %r10, %r10
	jle SmallNpos
	iaddq $1, %rax

SmallNpos:
	iaddq $8, %rdi
	iaddq $8, %rsi
	iaddq $-1, %rdx
	jg SmallLoop

##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
